user  nginx www-data;

events {
    worker_connections  10240;
}

http {
    resolver 192.168.0.252;
    client_max_body_size 2048m;
    lua_package_path '/etc/nginx/?.lua';
    lua_shared_dict sha1 10M;
    init_by_lua '
        require "base64"
        sha1 = require "sha1"
    ';

    log_format spdy_long '$remote_addr\t$remote_user\t$time_iso8601\t$host\t$server_addr\t$upstream_addr\t$request\t$status\t$body_bytes_sent\t$request_length\t$http_referer\t$http_user_agent\t$http_x_forwarded_for\t$request_time\t$upstream_response_time\t$http_cookie';
    log_format long '$time_iso8601\t$msec\t$host\t$request_method\t$uri\t$args\t$http_referer\t$remote_addr\t$http_user_agent\t$cookie_sid\t$status\t$request_time\t$request_length\t$asp_net_sessionid\t$cookie_token\t$upstream_addr\t$bytes_sent\t$upstream_response_time';

##########################

    geo $region {
        ranges;
        include /etc/geo/region.txt;
    }

    geo $city {
        ranges;
        include /etc/geo/city.txt;
    }

    geo $is_tor {
        ranges;
        default 0;
        include /etc/geo/tor.txt;
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }
    ssl_certificate      example.com.pem;
    ssl_certificate_key  example.com.pem;
    ssl_session_timeout  5m;
	ssl_session_cache shared:SSL:50m;

    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers  ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:AES128-GCM-SHA256:AES128-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:AES256-GCM-SHA384:AES256-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:AES128-SHA:AES256-SHA:DES-CBC3-SHA;

    ssl_prefer_server_ciphers   on;
	ssl_stapling on;

    types {
        text/html                   html htm shtml;
        text/css                    css;
        text/xml                    xml;
        image/gif                   gif;
        image/jpeg                  jpeg jpg;
        application/x-javascript    js;
    }

    default_type  application/octet-stream;

    sendfile        on;

    upstream backend {
          server back1:80;
          server back2:80;
          server back3:80;
    }


    gzip on;
    gzip_types text/css text/javascript application/x-javascript application/javascript application/atom-xml text/plain text/xml text/x-component text/json application/json application/octet-stream;
    gzip_min_length 500;
    gzip_disable msie6;

    proxy_next_upstream error timeout http_503;

###########################

    server {
        listen       1.1.1.1:80;
        server_name  example.com; # promo author:
        error_log   /var/log/nginx/example.com.error_log alert;
        access_log  /var/log/nginx/example.com.access.log combined buffer=32k;
        location / {
            proxy_set_header Host $host;
            proxy_connect_timeout 90;
            proxy_send_timeout 5m;
            proxy_read_timeout 5m;
            proxy_pass   http://back1;
        }
    }

    server {
        listen       2.2.2.2:80;
        server_name example.net; # author: info@example.net
        rewrite ^/(.*)$ https://$server_name/$1 redirect;
    }

    upstream example.net {
	    server back-net1;
	    keepalive 10;
    }

    server {
        listen       2.2.2.2:443 ssl;
        server_name example.net; # author: info@example.net

        ssl_certificate      example.net.pem;
        ssl_certificate_key  example.net.pem;

	    access_by_lua_file 'net-protect.lua';

        error_page 502 503 504 =503 /500.html;
        proxy_intercept_errors on;

        location /500.html {
            alias /var/www/static/500.html;
        }

        location / {
            header_filter_by_lua '
                ngx.header.content_length = nil
            ';
    		proxy_read_timeout     1200;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
		    proxy_pass      http://example.net;
        }

        access_log  /var/log/nginx/example.net-access-long.log long_origin buffer=256k;
        error_log  /var/log/nginx/example.net-error.log;
    }
}

stream {
    upstream rdp.example.com {
        server rdp:443;
    }

    server {
            listen  1.1.1.1:443 ssl;
            proxy_ssl  on;
            proxy_pass       rdp.example.com;
            ssl_certificate       example.com.pem;
            ssl_certificate_key   example.com.pem;
            ssl_session_tickets	on;
            ssl_session_timeout  5m;
            ssl_session_cache shared:SSLSTREAM:50m;

            ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
            ssl_ciphers  ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:AES128-GCM-SHA256:AES128-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:AES256-GCM-SHA384:AES256-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:AES128-SHA:AES256-SHA:DES-CBC3-SHA;
            ssl_prefer_server_ciphers   on;
            error_log  /var/log/nginx/rdp-example.com.log long;
    }

    upstream git.example.net {
        server gitlab-back:22;
    }

    server {
            listen  2.2.2.2:22; #author: git@example.net
            proxy_pass       git.example.net;
            error_log  /var/log/nginx/git.log alert;
    }
}